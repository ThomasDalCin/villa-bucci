<!-- product-showcase slider -->
<div class="w-full h-auto flex flex-col items-start justify-center relative px-8 py-[100px] gap-y-20 lg:gap-y-[20vw] lg:px-[10vw]">

  <div class="w-full h-auto flex flex-col items-center justify-center gap-y-5 lg:gap-y-10">
    <h2 class="text-[60px] leading-[60px] tracking-[-0.6px] lg:text-[8vw] text-center lg:leading-[10vw] lg:tracking-[-1.2px]">
      {{ section.settings.section_main_title | default: "I nostri vini" | upcase }}</h2>
    <p class="text-[16px] leading-[28px] tracking-[0.2px] text-center lg:text-[20px] lg:leading-[28px] lg:w-[600px] lg:max-w-[600px]">
      {{ section.settings.section_heading_text | default: "I vini di Villa Bucci sono il frutto di una sapiente
              lavorazione artigianale e di un terroir unico.Scopri le nostre etichette:" }}</p>
  </div>

  <div class="w-full h-auto flex flex-col items-center justify-start relative gap-y-[50px] lg:flex-row-reverse lg:gap-x-[3vw] lg:min-h-[90vh] overflow-x-hidden">

    <!-- container product -->
    <div class="w-full h-[454px] flex flex-col items-center justify-center relative overflow-hidden lg:h-[82vh]">
      <div class="bg-rect w-full h-full bg-[#FFF3D8] absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 z-0"></div>

      <div class="slider-products-container absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 w-full h-[496px] flex flex-row items-center justify-start z-20 lg:h-[90vh]">
        {% for product in collections.all.products %}
          <div class="product w-full min-w-full h-[496px] flex flex-col items-center justify-center lg:h-full" data-product="{{ forloop.index0 }}">
            <img
              class="w-[172px] h-[496px] lg:w-full lg:h-full object-center object-cover lg:object-contain"
              src="{{ product.featured_image |  img_url: 'master' }}"
              alt="">
          </div>
        {% endfor %}
      </div>
    </div>

    <!-- container svg -->
    <div class="w-auto h-full flex-col items-center justify-end hidden lg:flex">
      {% render 'vertical-divider' %}
    </div>

    <!-- container info products -->
    <div class="w-full h-auto flex flex-col items-start justify-center lg:overflow-hidden">
      <div class="slider-product-titles w-full h-auto flex flex-row items-center justify-start">
        {% for product in collections.all.products %}
          {% assign productReserve = product.metafields.custom.product_reserve.value %}
          <div class="product-title-container w-full h-auto min-w-full flex flex-col items-center justify-center lg:gap-y-[3vw] lg:items-start">
            <h2 class="product-title text-[36px] leading-[40px] tracking-[-0.36px] text-center lg:text-[5vw] lg:leading-[5vw] lg:tracking-[-1.2px] lg:text-left">
              {{ product.title | upcase }}</h2>
            <p class="produdct-subtitle text-[14px] leading-[28px] tracking-[0.2px] uppercase">{{ productReserve | upcase
}}</p>
          </div>
        {% endfor %}
      </div>
    </div>

  </div>

  <!-- arrow-content -->
  <div class="w-full h-auto absolute bottom-0 left-0 flex flex-row items-start justify-between gap-x-2.5 z-20 px-8 lg:w-auto lg:justify-center lg:px-[10vw] lg:pb-[10vw]">

    <div class="w-auto h-auto arrow-left flex items-center justify-center cursor-pointer arrow-product-left">
      <div class="w-[40px] h-[40px]">
        {% render  %}
      </div>
    </div>
    <div class="w-auto h-auto arrow-right flex items-center justify-center cursor-pointer arrow-product-right">
      <div class="w-[40px] h-[40px]">
        {% render  %}
      </div>
    </div>

  </div>

</div>


<script>
  document.addEventListener('DOMContentLoaded', () => {

    const sliderContainerProduct = document.querySelector('.slider-products-container');
    const titlesContainer = document.querySelector('.slider-product-titles');
    const titles = document.querySelectorAll('.product-title-container');
    const products = document.querySelectorAll('.product');
    const arrowProductRight = document.querySelector('.arrow-product-right');
    const arrowProductLeft = document.querySelector('.arrow-product-left');
    
    let index = 1;
    let itemWidth = products[0].offsetWidth;
    let titleWidth = titles[0].offsetWidth;
    
    const firstCloneProduct = products[0].cloneNode(true);
    const lastCloneProduct = products[products.length - 1].cloneNode(true);
    
    const firstCloneTitle = titles[0].cloneNode(true);
    const lastCloneTitle = titles[titles.length - 1].cloneNode(true);
    
    sliderContainerProduct.appendChild(firstCloneProduct);
    sliderContainerProduct.insertBefore(lastCloneProduct, products[0]);

    titlesContainer.appendChild(firstCloneTitle);
    titlesContainer.insertBefore(lastCloneTitle, titles[0]);

    sliderContainerProduct.style.transform = `translateX(${-itemWidth}px)`;
    titlesContainer.style.transform = `translateX(${-titleWidth}px)`;

    function moveSlider(direction) {

      if (direction === "next") {
        index++;
      } else if (direction === "prev") {
        index--;
      }
      
      sliderContainerProduct.style.transition = "transform 0.3s ease-in-out";
      titlesContainer.style.transition = "transform 0.3s ease-in-out";

      sliderContainerProduct.style.transform = `translateX(${-index * itemWidth}px)`;
      titlesContainer.style.transform = `translateX(${-index * titleWidth}px)`;

    }

    arrowProductRight.addEventListener('click', () => moveSlider("next"));
    arrowProductLeft.addEventListener('click', () => moveSlider("prev"));

    sliderContainerProduct.addEventListener('transitionend', () => {
      if (index === products.length + 1) {
        index = 1;
        sliderContainerProduct.style.transition = "none";
        titlesContainer.style.transition = "none";
        sliderContainerProduct.style.transform = `translateX(${-index * itemWidth}px)`;
        titlesContainer.style.transform = `translateX(${-index * titleWidth}px)`;
      }
      
      if (index === 0) {
        index = products.length;
        sliderContainerProduct.style.transition = "none";
        titlesContainer.style.transition = "none";
        sliderContainerProduct.style.transform = `translateX(${-index * itemWidth}px)`;
        titlesContainer.style.transform = `translateX(${-index * titleWidth}px)`;
      }
    });

  });
</script>




{% schema %}
  {
    "name": "product-showcase",
    "settings": [
      {
        "type": "text",
        "id": "section_main_title",
        "label": "Section main title"
      }, {
        "type": "text",
        "id": "section_heading_text",
        "label": "Section subheading text title"
      }
    ]
  }
{% endschema %}